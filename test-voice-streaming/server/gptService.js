/**
 * YandexGPT —Å–µ—Ä–≤–∏—Å (–æ–±—ã—á–Ω—ã–π API, –Ω–µ streaming)
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç IAM —Ç–æ–∫–µ–Ω –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */

import axios from 'axios';

export async function getGPTResponse(conversationHistory, iamTokenManager, folderId) {
  try {
    console.log('‚è±Ô∏è YandexGPT API - –Ω–∞—á–∞–ª–æ');
    const start = Date.now();

    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π IAM —Ç–æ–∫–µ–Ω
    const iamToken = await iamTokenManager.getToken();

    const response = await axios.post(
      'https://llm.api.cloud.yandex.net/foundationModels/v1/completion',
      {
        modelUri: `gpt://${folderId}/yandexgpt-lite/latest`,
        completionOptions: {
          stream: false,
          temperature: 0.7,
          maxTokens: 40  // –û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
        },
        messages: [
          {
            role: 'system',
            text: '–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –æ—á–µ–Ω—å –∫—Ä–∞—Ç–∫–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –∫–∞–∫ –≤ –∂–∏–≤–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–µ. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç—ã–µ –∫–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–∑—ã.'
          },
          ...conversationHistory
        ]
      },
      {
        headers: {
          'Authorization': `Bearer ${iamToken}`,
          'Content-Type': 'application/json'
        }
      }
    );

    const aiResponse = response.data.result.alternatives[0].message.text;
    const duration = Date.now() - start;

    console.log(`‚úÖ YandexGPT –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${duration}ms`);
    console.log(`ü§ñ GPT –æ—Ç–≤–µ—Ç–∏–ª: ${aiResponse}`);

    return aiResponse;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ YandexGPT:', error.response?.data || error.message);
    throw error;
  }
}
